{
  "test_summary": {
    "duration_seconds": 4.491701,
    "total_tests": 10,
    "test_start_time": "2025-07-02T00:21:32.576420",
    "test_end_time": "2025-07-02T00:21:37.068121"
  },
  "backend_analysis": {
    "total": 5,
    "passed": 4,
    "failed": 0,
    "warnings": 1,
    "pass_rate": 80.0,
    "key_issues": []
  },
  "frontend_analysis": {
    "total": 2,
    "passed": 1,
    "failed": 1,
    "warnings": 0,
    "pass_rate": 50.0,
    "key_issues": [
      "frontend_accessibility"
    ]
  },
  "integration_analysis": {
    "total": 3,
    "passed": 2,
    "failed": 0,
    "warnings": 1,
    "pass_rate": 66.66666666666666,
    "key_issues": []
  },
  "recommendations": [
    "\ud83d\udd27 Frontend is not accessible - check if it's running on port 5173",
    "\ud83d\udd27 Ensure all API endpoints return consistent JSON structure",
    "\ud83d\udd27 Include expected fields in API responses",
    "\ud83d\udd27 Document API response formats for frontend team",
    "\ud83d\udd27 Implement rate limiting with proper HTTP headers",
    "\ud83d\udd27 Add request size limits and return 413 for large payloads",
    "\ud83d\udd27 Ensure error responses include helpful messages for frontend",
    "\ud83c\udfa8 CRITICAL: Fix frontend structure issues",
    "\ud83e\uddea ADD COMPREHENSIVE TESTING: Implement unit tests for React components",
    "\ud83c\udfad ADD E2E TESTING: Install Playwright or Cypress for full user journey testing",
    "\ud83d\udcca ADD PERFORMANCE MONITORING: Implement frontend performance tracking",
    "\ud83d\udd04 ADD INTEGRATION TESTS: Test complete user workflows end-to-end",
    "\ud83c\udfaf ADD ERROR BOUNDARIES: Implement React error boundaries for better UX",
    "\ud83d\udcf1 TEST MOBILE COMPATIBILITY: Ensure all features work on mobile devices",
    "\u267f ADD ACCESSIBILITY TESTING: Implement accessibility compliance testing"
  ],
  "detailed_results": [
    {
      "test_name": "backend_health",
      "category": "backend",
      "status": "pass",
      "details": {
        "status_code": 200,
        "response_data": {
          "authentication": "Ready",
          "database": "Available",
          "message": "Backend is running successfully!",
          "service": "ALVIN API",
          "socketio": "WebSocket ready",
          "status": "healthy",
          "version": "1.0.0"
        },
        "healthy": true
      },
      "response_time": 0.026503801345825195,
      "timestamp": "2025-07-02 00:21:32.605198",
      "recommendations": []
    },
    {
      "test_name": "frontend_accessibility",
      "category": "frontend",
      "status": "fail",
      "details": {
        "error": "Cannot connect to host localhost:5173 ssl:default [Vzd\u00e1len\u00fd po\u010d\u00edta\u010d odm\u00edtl s\u00ed\u0165ov\u00e9 p\u0159ipojen\u00ed]",
        "accessible": false
      },
      "response_time": 2.305647611618042,
      "timestamp": "2025-07-02 00:21:34.912054",
      "recommendations": [
        "\ud83d\udd27 Frontend is not accessible - check if it's running on port 5173"
      ]
    },
    {
      "test_name": "cors_configuration",
      "category": "backend",
      "status": "pass",
      "details": {
        "cors_headers": {
          "access_control_allow_origin": "http://localhost:5173",
          "access_control_allow_methods": "DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT",
          "access_control_allow_headers": "Authorization, Content-Type",
          "access_control_allow_credentials": "true"
        },
        "properly_configured": true,
        "status_code": 200
      },
      "response_time": 0.010152816772460938,
      "timestamp": "2025-07-02 00:21:34.931642",
      "recommendations": []
    },
    {
      "test_name": "api_error_formats",
      "category": "backend",
      "status": "pass",
      "details": {
        "consistent_format": true,
        "error_tests": {
          "404_endpoint": {
            "status": 404,
            "has_error_field": true,
            "response_format": "json"
          },
          "invalid_json": {
            "status": 401,
            "has_error_field": true,
            "response_format": "json"
          },
          "missing_auth": {
            "status": 401,
            "has_error_field": true,
            "response_format": "json"
          }
        }
      },
      "response_time": 0.013021707534790039,
      "timestamp": "2025-07-02 00:21:34.944664",
      "recommendations": []
    },
    {
      "test_name": "auth_frontend_compatibility",
      "category": "integration",
      "status": "pass",
      "details": {
        "auth_flow_compatible": true,
        "flow_results": {
          "register": {
            "status": 201,
            "success": true,
            "has_token": true,
            "response_data": {
              "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1MTQwODQ5NSwianRpIjoiZDZhNmM2NjUtMmE4NS00NjUzLWIxNDMtOGI4NjVmMzc1MTRhIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6IjQzIiwibmJmIjoxNzUxNDA4NDk1LCJleHAiOjE3NTE0OTQ4OTUsInVzZXJfaWQiOjQzfQ.kyFqhup3faBEuld2kJEX5vLbHGGBjgsyVJ7Eo7qFuGE",
              "message": "User created successfully",
              "user": {
                "avatar_url": null,
                "bio": null,
                "created_at": "2025-07-01T22:21:35.128663",
                "email": "frontend_test_1751408494@test.com",
                "full_name": "Frontend Test User",
                "id": 43,
                "is_active": true,
                "is_verified": false,
                "last_login": null,
                "plan": "free",
                "tokens_limit": 1000,
                "tokens_remaining": 1000,
                "tokens_used": 0,
                "username": "frontend_test_1751408494"
              }
            }
          },
          "login": {
            "status": 200,
            "success": true,
            "has_token": true,
            "response_data": {
              "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1MTQwODQ5NSwianRpIjoiMWQyNzJlNjAtZmExNS00OTJiLWI4MDAtZThlZTUxMjQ3NTAyIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6IjQzIiwibmJmIjoxNzUxNDA4NDk1LCJleHAiOjE3NTE0OTQ4OTUsInVzZXJfaWQiOjQzLCJ1c2VyX2VtYWlsIjoiZnJvbnRlbmRfdGVzdF8xNzUxNDA4NDk0QHRlc3QuY29tIiwidXNlcl9wbGFuIjoiZnJlZSJ9.twvceGabbTtdl7CWo7fhzAUD6mRokcaOOakXQ4fO_1Y",
              "message": "Login successful",
              "token_type": "Bearer",
              "user": {
                "avatar_url": null,
                "bio": null,
                "created_at": "2025-07-01T22:21:35.128663",
                "email": "frontend_test_1751408494@test.com",
                "full_name": "Frontend Test User",
                "id": 43,
                "is_active": true,
                "is_verified": false,
                "last_login": "2025-07-01T22:21:35.303271",
                "plan": "free",
                "tokens_limit": 1000,
                "tokens_remaining": 1000,
                "tokens_used": 0,
                "username": "frontend_test_1751408494"
              }
            }
          },
          "authenticated_request": {
            "status": 200,
            "success": true,
            "token_works": true
          }
        }
      },
      "response_time": 0.3762795925140381,
      "timestamp": "2025-07-02 00:21:35.320943",
      "recommendations": []
    },
    {
      "test_name": "data_format_consistency",
      "category": "backend",
      "status": "warning",
      "details": {
        "consistent_formats": false,
        "format_issues": [
          {
            "endpoint": "/api/auth/register",
            "missing_fields": [
              "access_token",
              "user"
            ],
            "actual_fields": [
              "message"
            ]
          }
        ]
      },
      "response_time": 0.007509708404541016,
      "timestamp": "2025-07-02 00:21:35.328453",
      "recommendations": [
        "\ud83d\udd27 Ensure all API endpoints return consistent JSON structure",
        "\ud83d\udd27 Include expected fields in API responses",
        "\ud83d\udd27 Document API response formats for frontend team"
      ]
    },
    {
      "test_name": "websocket_endpoint",
      "category": "backend",
      "status": "pass",
      "details": {
        "status_code": 400,
        "available": true,
        "content_type": "text/plain"
      },
      "response_time": 0.0026197433471679688,
      "timestamp": "2025-07-02 00:21:35.331073",
      "recommendations": []
    },
    {
      "test_name": "frontend_structure",
      "category": "frontend",
      "status": "pass",
      "details": {
        "existing_files": [
          "package.json",
          "vite.config",
          "tsconfig",
          "main_component",
          "app_component"
        ],
        "missing_files": [],
        "dependencies_analysis": {
          "total_deps": 34,
          "total_dev_deps": 38,
          "key_dependencies": {
            "react": "^18.2.0",
            "typescript": "^5.2.2",
            "vite": "^5.0.0",
            "axios": "^1.6.2",
            "socket.io-client": "^4.7.4",
            "testing": "^1.0.4"
          },
          "has_testing": true
        },
        "src_structure": {
          "components": true,
          "pages": true,
          "hooks": true,
          "context": true,
          "services": true,
          "utils": true
        },
        "well_structured": true
      },
      "response_time": 0,
      "timestamp": "2025-07-02 00:21:35.334758",
      "recommendations": []
    },
    {
      "test_name": "api_consistency",
      "category": "integration",
      "status": "pass",
      "details": {
        "consistent": true,
        "pattern_results": {
          "/health": {
            "GET": {
              "status": 200,
              "exists": true,
              "content_type": "application/json"
            }
          },
          "/api/auth/login": {
            "POST": {
              "status": 401,
              "exists": true,
              "content_type": "application/json"
            }
          },
          "/api/projects": {
            "GET": {
              "status": 401,
              "exists": true,
              "content_type": "application/json"
            },
            "POST": {
              "status": 401,
              "exists": true,
              "content_type": "application/json"
            }
          },
          "/api/ai/analyze-idea": {
            "POST": {
              "status": 401,
              "exists": true,
              "content_type": "application/json"
            }
          }
        },
        "consistency_issues": []
      },
      "response_time": 0.017839670181274414,
      "timestamp": "2025-07-02 00:21:35.355218",
      "recommendations": []
    },
    {
      "test_name": "error_handling_integration",
      "category": "integration",
      "status": "warning",
      "details": {
        "error_scenarios": {
          "rate_limiting": {
            "rate_limited": false,
            "has_rate_limit_headers": false,
            "responses": [
              {
                "status": 401,
                "headers": {
                  "Server": "Werkzeug/2.3.7 Python/3.11.13",
                  "Date": "Tue, 01 Jul 2025 22:21:36 GMT",
                  "Content-Type": "application/json",
                  "Content-Length": "50",
                  "Access-Control-Allow-Origin": "http://localhost:3000",
                  "Access-Control-Allow-Credentials": "true",
                  "Vary": "Origin",
                  "Connection": "close"
                },
                "request_num": 8
              },
              {
                "status": 401,
                "headers": {
                  "Server": "Werkzeug/2.3.7 Python/3.11.13",
                  "Date": "Tue, 01 Jul 2025 22:21:36 GMT",
                  "Content-Type": "application/json",
                  "Content-Length": "50",
                  "Access-Control-Allow-Origin": "http://localhost:3000",
                  "Access-Control-Allow-Credentials": "true",
                  "Vary": "Origin",
                  "Connection": "close"
                },
                "request_num": 9
              },
              {
                "status": 401,
                "headers": {
                  "Server": "Werkzeug/2.3.7 Python/3.11.13",
                  "Date": "Tue, 01 Jul 2025 22:21:37 GMT",
                  "Content-Type": "application/json",
                  "Content-Length": "50",
                  "Access-Control-Allow-Origin": "http://localhost:3000",
                  "Access-Control-Allow-Credentials": "true",
                  "Vary": "Origin",
                  "Connection": "close"
                },
                "request_num": 10
              }
            ]
          },
          "large_payload": {
            "status": 401,
            "handled_gracefully": false,
            "content_type": "application/json"
          }
        },
        "handled_well": false
      },
      "response_time": 1.712329626083374,
      "timestamp": "2025-07-02 00:21:37.067548",
      "recommendations": [
        "\ud83d\udd27 Implement rate limiting with proper HTTP headers",
        "\ud83d\udd27 Add request size limits and return 413 for large payloads",
        "\ud83d\udd27 Ensure error responses include helpful messages for frontend"
      ]
    }
  ],
  "next_steps": [
    "\ud83d\udea8 IMMEDIATE ACTIONS REQUIRED:",
    "\ud83c\udfa8 Resolve frontend structure and accessibility problems",
    "\ud83d\udccb Create GitHub issues for each failed test",
    "\u23f0 Set up CI/CD pipeline to run these tests automatically",
    "\ud83d\udc65 Share results with development team for prioritization"
  ]
}